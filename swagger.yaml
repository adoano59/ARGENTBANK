swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/transactions/monthly:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Visualiser les transactions du mois
      description: Récupère toutes les transactions du mois en cours, groupées par compte
      parameters:
        - in: header
          name: Authorization
          description: Token JWT pour l'authentification
          required: true
          type: string
        - in: query
          name: accountId
          description: ID du compte pour lequel les transactions sont à récupérer
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transactions récupérées avec succès
          schema:
            $ref: '#/definitions/TransactionsResponse'
        '400':
          description: Paramètres de requête invalides
        '500':
          description: Erreur serveur interne
          
  /user/transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Visualiser les détails d'une transaction
      description: Récupère les détails d'une transaction spécifique
      parameters:
        - in: header
          name: Authorization
          description: Token JWT pour l'authentification
          required: true
          type: string
        - in: path
          name: transactionId
          description: ID de la transaction à afficher
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Détails de la transaction récupérés avec succès
          schema:
            $ref: '#/definitions/Transaction'
        '404':
          description: Transaction non trouvée
        '500':
          description: Erreur serveur interne

    put:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Modifier la description d'une transaction
      description: Modifie uniquement la description d'une transaction spécifique
      parameters:
        - in: header
          name: Authorization
          description: Token JWT pour l'authentification
          required: true
          type: string
        - in: path
          name: transactionId
          description: ID de la transaction à modifier
          required: true
          type: string
        - in: body
          name: body
          description: Nouvelle description pour la transaction
          required: true
          schema:
            type: object
            properties:
              description:
                type: string
      produces:
        - application/json
      responses:
        '200':
          description: Description de la transaction mise à jour avec succès
        '404':
          description: Transaction non trouvée
        '500':
          description: Erreur serveur interne

    delete:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Supprimer la description d'une transaction
      description: Supprime uniquement la description d'une transaction spécifique
      parameters:
        - in: header
          name: Authorization
          description: Token JWT pour l'authentification
          required: true
          type: string
        - in: path
          name: transactionId
          description: ID de la transaction dont la description doit être supprimée
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Description de la transaction supprimée avec succès
        '404':
          description: Transaction non trouvée
        '500':
          description: Erreur serveur interne

  /user/transactions:
    post:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Ajouter une description de transaction
      description: Ajoute une description à une transaction existante
      parameters:
        - in: header
          name: Authorization
          description: Token JWT pour l'authentification
          required: true
          type: string
        - in: body
          name: body
          description: Détails de la transaction à ajouter (seule la description est autorisée)
          required: true
          schema:
            type: object
            properties:
              transactionId:
                type: string
                description: ID de la transaction à laquelle ajouter la description
              description:
                type: string
                description: Description de la transaction
      produces:
        - application/json
      responses:
        '201':
          description: Description ajoutée avec succès
        '400':
          description: Paramètres invalides
        '500':
          description: Erreur serveur interne

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  TransactionsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: array
        items:
          $ref: '#/definitions/Transaction'
  Transaction:
    type: object
    properties:
      id:
        type: string
      date:
        type: string
        format: date
      amount:
        type: number
      description:
        type: string
      accountId:
        type: string